apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
  name: thanos-sidecar-0
spec:
  ports:
    - port: 10901
      protocol: TCP
      targetPort: grpc
      name: grpc
  selector:
    statefulset.kubernetes.io/pod-name: prometheus-prom-rel-kube-prometheus-s-prometheus-0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
  name: thanos-sidecar-1
spec:
  ports:
    - port: 10901
      protocol: TCP
      targetPort: grpc
      name: grpc
  selector:
    statefulset.kubernetes.io/pod-name: prometheus-prom-rel-kube-prometheus-s-prometheus-1
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/whitelist-source-range: "PLACE_HOLDER_THANOS_CLIENT_IP_RANGE"
  labels:
    app: prometheus
  name: thanos-sidecar-0
spec:
  rules:
    - host: thanos-0-PLACE_HOLDER_AKS_DOMAIN
      http:
        paths:
          - backend:
              serviceName: thanos-sidecar-0
              servicePort: grpc
  tls:
    - hosts:
        - thanos-0-PLACE_HOLDER_AKS_DOMAIN
      secretName: thanos-ingress-secret
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/whitelist-source-range: "PLACE_HOLDER_THANOS_CLIENT_IP_RANGE"
  labels:
    app: prometheus
  name: thanos-sidecar-1
spec:
  rules:
    - host: thanos-1-PLACE_HOLDER_AKS_DOMAIN
      http:
        paths:
          - backend:
              serviceName: thanos-sidecar-1
              servicePort: grpc
  tls:
    - hosts:
        - thanos-1-PLACE_HOLDER_AKS_DOMAIN
      secretName: thanos-ingress-secret
