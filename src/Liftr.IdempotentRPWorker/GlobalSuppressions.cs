//-----------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All rights reserved.
//-----------------------------------------------------------------------------
// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator.RunAsync~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator.RollbackAsync(Liftr.IdempotentRPWorker.Contracts.StateContext,Microsoft.Liftr.IdempotentRPWorker.BaseResource,Microsoft.Liftr.IdempotentRPWorker.IState{Liftr.IdempotentRPWorker.Contracts.States,Liftr.IdempotentRPWorker.Contracts.StateContext},Serilog.ILogger)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Microsoft.Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator.RunAsync~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Microsoft.Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator.RollbackAsync(Microsoft.Liftr.IdempotentRPWorker.Contracts.StateContext,Microsoft.Liftr.IdempotentRPWorker.BaseResource,Microsoft.Liftr.IdempotentRPWorker.IState{Microsoft.Liftr.IdempotentRPWorker.Contracts.States,Microsoft.Liftr.IdempotentRPWorker.Contracts.StateContext},Serilog.ILogger)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Microsoft.Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator.RunAsync~System.Threading.Tasks.Task{Microsoft.Liftr.IdempotentRPWorker.Contracts.WorkerResults}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Microsoft.Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator`1.RunAsync~System.Threading.Tasks.Task{Microsoft.Liftr.IdempotentRPWorker.Contracts.WorkerResults}")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Microsoft.Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator`1.RollbackAsync(Microsoft.Liftr.IdempotentRPWorker.Contracts.StateContext,Microsoft.Liftr.IdempotentRPWorker.BaseResource,Microsoft.Liftr.IdempotentRPWorker.IState{Microsoft.Liftr.IdempotentRPWorker.Contracts.States,Microsoft.Liftr.IdempotentRPWorker.Contracts.StateContext},Serilog.ILogger)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Microsoft.Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator`1.RollbackAsync(Microsoft.Liftr.IdempotentRPWorker.Contracts.StateContext,Microsoft.Liftr.IdempotentRPWorker.BaseResource,Microsoft.Liftr.IdempotentRPWorker.IState{Microsoft.Liftr.IdempotentRPWorker.Contracts.States,Microsoft.Liftr.IdempotentRPWorker.Contracts.StateContext},Microsoft.Liftr.IdempotentRPWorker.Interfaces.IWorkerDatabaseService,Serilog.ILogger)~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Microsoft.Liftr.IdempotentRPWorker.Service.IdempotentOrchestrator`1.RollbackAsync(Microsoft.Liftr.IdempotentRPWorker.Contracts.StateContext,Microsoft.Liftr.IdempotentRPWorker.BaseResource,Microsoft.Liftr.IdempotentRPWorker.IState{Microsoft.Liftr.IdempotentRPWorker.Contracts.StatesEnum,Microsoft.Liftr.IdempotentRPWorker.Contracts.StateContext},Microsoft.Liftr.IdempotentRPWorker.Interfaces.IWorkerDatabaseService,Serilog.ILogger)~System.Threading.Tasks.Task")]
